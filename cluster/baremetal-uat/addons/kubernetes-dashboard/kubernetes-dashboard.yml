apiVersion: v1
 kind: Service
 metadata:
   labels:
     k8s-app: kubernetes-dashboard
     kubernetes.io/cluster-service: "true"
   name: kubernetes-dashboard
   namespace: kube-system
   resourceVersion: "52"
   selfLink: /api/v1/namespaces/kube-system/services/kubernetes-dashboard
   uid: 3469b5a5-0009-11e7-8bfd-068c35e8c77a
 spec:
   clusterIP: 10.254.219.72
   ports:
   - port: 80
     protocol: TCP
     targetPort: 9090
   selector:
     k8s-app: kubernetes-dashboard
   sessionAffinity: None
   type: ClusterIP
 status:
   loadBalancer: {}
---
apiVersion: v1
kind: ReplicationController
metadata:
  creationTimestamp: 2017-03-03T12:01:59Z
  generation: 1
  labels:
    k8s-app: kubernetes-dashboard
    kubernetes.io/cluster-service: "true"
    version: v1.5.1
  name: kubernetes-dashboard-v1.5.1
  namespace: kube-system
  resourceVersion: "2585335"
  selfLink: /api/v1/namespaces/kube-system/replicationcontrollers/kubernetes-dashboard-v1.5.1
  uid: 3459d708-0009-11e7-8bfd-068c35e8c77a
spec:
  replicas: 1
  selector:
    k8s-app: kubernetes-dashboard
  template:
    metadata:
      annotations:
        scheduler.alpha.kubernetes.io/critical-pod: ""
        scheduler.alpha.kubernetes.io/tolerations: '[{"key":"CriticalAddonsOnly",
          "operator":"Exists"}]'
      creationTimestamp: null
      labels:
        k8s-app: kubernetes-dashboard
        kubernetes.io/cluster-service: "true"
        version: v1.5.1
    spec:
      containers:
      - image: gcr.io/google_containers/kubernetes-dashboard-amd64:v1.5.1
        imagePullPolicy: IfNotPresent
        livenessProbe:
          failureThreshold: 3
          httpGet:
            path: /
            port: 9090
            scheme: HTTP
          initialDelaySeconds: 30
          periodSeconds: 10
          successThreshold: 1
          timeoutSeconds: 30
        name: kubernetes-dashboard
        ports:
        - containerPort: 9090
          protocol: TCP
        resources:
          limits:
            cpu: 100m
            memory: 50Mi
          requests:
            cpu: 100m
            memory: 50Mi
        terminationMessagePath: /dev/termination-log
      dnsPolicy: ClusterFirst
      restartPolicy: Always
      securityContext: {}
      terminationGracePeriodSeconds: 30
status:
  availableReplicas: 1
  fullyLabeledReplicas: 1
  observedGeneration: 1
  readyReplicas: 1
  replicas: 1