{% if conf['es-data']%}

{% for index in range(conf['es-data']['replicas']) %}
  apiVersion: v1
  kind: PersistentVolume
  metadata:
    name: es-storage-es-data-{{index}}
    labels:
      app: elasticsearch
  spec:
    capacity:
      storage: 5Gi
    accessModes:
      - ReadWriteOnce
    persistentVolumeReclaimPolicy: Recycle
    claimRef:
        namespace: es-cluster
        name: es-storage-es-data-{{index}}
{% if conf['es-data']['ebs-volumes']  and conf['es-data']['ebs-volumes'][index]  %}
    awsElasticBlockStore:
      volumeID: {{conf['es-data']['ebs-volumes'][index]}}
      fsType: ext4
{% else %}
    hostPath:
      path: /opt/eGov/es-storage-es-data-{{index}}
{% endif %}
---
{% endfor %}
{% endif %}
{% for index in range(conf['zookeeper']['replicas']) %}
  apiVersion: v1
  kind: PersistentVolume
  metadata:
    name: zookeeper-data-zookeeper-{{index}}
    labels:
      app: zookeeper
  spec:
    capacity:
      storage: 5Gi
    accessModes:
      - ReadWriteOnce
    persistentVolumeReclaimPolicy: Recycle
    claimRef:
        namespace: backbone
        name: zookeeper-data-zookeeper-{{index}}
{% if conf['zookeeper']['ebs-volumes']  and conf['zookeeper']['ebs-volumes'][index]  %}
    awsElasticBlockStore:
      volumeID: {{conf['zookeeper']['ebs-volumes'][index]}}
      fsType: ext4
{% else %}
    hostPath:
      path: /opt/eGov/zookeeper-data-zookeeper-{{index}}
{% endif %}
---
{% endfor %}
  apiVersion: v1
  kind: PersistentVolume
  metadata:
    name: filestore-volume
    annotations:
      volume.beta.kubernetes.io/storage-class: "slow"
    labels:
      app: egov-filestore
  spec:
    capacity:
      storage: 5Gi
    accessModes:
      - ReadWriteOnce
    persistentVolumeReclaimPolicy: Recycle
    claimRef:
        namespace: egov
        name: filestore-volume-claim
    hostPath:
      path: {{conf['egov-filestore']['volume']}}
---
{% for index in range(conf['kafka']['replicas']) %}
  apiVersion: v1
  kind: PersistentVolume
  metadata:
    name: kafka-data-kafka-{{index}}
    labels:
      app: kafka
  spec:
    capacity:
      storage: 5Gi
    accessModes:
      - ReadWriteOnce
    persistentVolumeReclaimPolicy: Recycle
    claimRef:
        namespace: backbone
        name: kafka-data-kafka-{{index}}
{% if conf['kafka']['ebs-volumes']  and conf['kafka']['ebs-volumes'][index]  %}
    awsElasticBlockStore:
      volumeID: {{conf['kafka']['ebs-volumes'][index]}}
      fsType: ext4
{% else %}
    hostPath:
      path: /opt/eGov/kafka-data-kafka-{{index}}
{% endif %}
---
{% endfor %}
