apiVersion: v1
kind: Service
metadata:
  name: finance-collections-voucher-consumer
  namespace: egov
  labels:
    app: finance-collections-voucher-consumer
    group: collections
spec:
  ports:
  - port: 8080
    targetPort: 8080
  selector:
    app: finance-collections-voucher-consumer
    group: collections
---
apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  name: finance-collections-voucher-consumer
  namespace: egov
spec:
  replicas: {{conf['finance-collections-voucher-consumer']['replicas']}}
  template:
    metadata:
      labels:
        app: finance-collections-voucher-consumer
        group: collections
      annotations:
        pod.beta.kubernetes.io/init-containers: '[
          {
            "name": "firenoc-services-db-migration",
            "image": "{{conf["firenoc-services"]["db_migration_image"]}}",
            "env": [
              {"name": "DB_URL", "valueFrom": {"configMapKeyRef": {"name": "egov-config", "key": "db-url"}}},
              {"name": "SCHEMA_TABLE", "value": "finance-collections-voucher-consumer_schema"},
              {"name": "FLYWAY_USER", "valueFrom": {"secretKeyRef": {"name": "db", "key": "flyway-username"}}},
              {"name": "FLYWAY_PASSWORD", "valueFrom": {"secretKeyRef": {"name": "db", "key": "flyway-password"}}},
              {"name": "FLYWAY_LOCATIONS", "valueFrom": {"configMapKeyRef": {"name": "egov-config", "key": "flyway-locations"}}}
            ],
            "imagePullPolicy": "IfNotPresent"
          }
        ]'
    spec:
      containers:
      - name: finance-collections-voucher-consumer
        image: {{conf['finance-collections-voucher-consumer']['images'][0]}}
        ports:
        - containerPort: 8080
        env:
        - name: SERVER_CONTEXT_PATH
          value: /finance-collections-voucher-consumer
        - name: SPRING_KAFKA_PRODUCER_KEY_SERIALIZER
          value: org.apache.kafka.common.serialization.StringSerializer
        - name: SPRING_KAFKA_PRODUCER_VALUE_SERIALIZER
          value: org.apache.kafka.common.serialization.StringSerializer
        - name: EGOV_SERVICES_HOST
          value: "{{conf['egov-config']['egov-services-fqdn-name']}}"
        - name: EGOV_SERVICES_EGOV_USER_HOST
          value: "{{conf['egov-config']['egov-user']}}"
        - name: EGOV_SERVICES_MDMS_HOSTNAME
          value: "{{conf['egov-config']['egov-mdms-service']}}"
        - name: EGOV_SERVICES_EGFINSTRUMENT_HOSTNAME
          value: "{{conf['egov-config']['egf-instrument']}}"
        - name: EGOV_SERVICES_EGFMASTER_HOSTNAME
          value: "{{conf['egov-config']['egf-master']}}"
        - name: EGOV_SERVICES_COLLECTIONS_HOSTNAME
          value: "{{conf['egov-config']['collection-services']}}"
        - name: SI_MICROSERVICE_USER
          value: "SIFINANCE"
        - name: SI_MICROSERVICE_PASSWORD
          value: "sifinance123@"
        - name: SI_MICROSERVICE_USERTYPE
          value: "SYSTEM"
        - name: SI_MICROSERVICE_SCOPE
          value: "read"
        - name: SI_MICROSERVICE_GRANTTYPE
          value: "password"
        - name: SPRING_KAFKA_BOOTSTRAP_SERVERS
          valueFrom:
            configMapKeyRef:
              name: egov-config
              key: kafka-brokers
        - name: APP_TIMEZONE
          valueFrom:
            configMapKeyRef:
              name: egov-config
              key: timezone
        - name: JAVA_OPTS
          value: "{{conf['finance-collections-voucher-consumer']['heap'] or '-Xmx192m -Xms192m'}}"
        - name: SPRING_JPA_SHOW_SQL
          value: "{{conf['egov-config']['spring-jpa-show-sql']}}"
        - name: SERVER_PORT
          value: "8080"
        resources:
          requests:
            memory: "64Mi"
          limits:
            memory: "{{conf['finance-collections-voucher-consumer']['memory_limits'] or "512Mi"}}"
