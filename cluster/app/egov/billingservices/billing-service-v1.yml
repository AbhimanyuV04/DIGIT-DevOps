apiVersion: v1
kind: Service
metadata:
  name: billing-service-v1
  namespace: egov
  labels:
    app: billing-service-v1
    group: billingservices
  annotations:
    prometheus.io/path: /billing-service-v1/prometheus
    prometheus.io/port: "8080"
    prometheus.io/scrape: "true"    
spec:
  ports:
  - port: 8080
    targetPort: 8080
  selector:
    app: billing-service-v1
    group: billingservices
---
apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  name: billing-service-v1
  namespace: egov
spec:
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxUnavailable: 0
      maxSurge: 1
  replicas: {{conf['billing-service-v1']['replicas']}}
  template:
    metadata:
      labels:
        app: billing-service-v1
        group: billingservices
      annotations:
        pod.beta.kubernetes.io/init-containers: '[
          {
            "name": "billing-service-v1-db-migration",
            "image": "{{conf["billing-service-v1"]["db_migration_image"]}}",
            "env": [
              {"name": "DB_URL", "value": "{{conf['billing-service-v1']['db-url']}}"},
              {"name": "SCHEMA_TABLE", "value": "billing_service_schema"},
              {"name": "FLYWAY_USER", "valueFrom": {"secretKeyRef": {"name": "db", "key": "flyway-username"}}},
              {"name": "FLYWAY_PASSWORD", "valueFrom": {"secretKeyRef": {"name": "db", "key": "flyway-password"}}},
              {"name": "FLYWAY_LOCATIONS", "valueFrom": {"configMapKeyRef": {"name": "egov-config", "key": "flyway-locations"}}}
            ],
            "imagePullPolicy": "IfNotPresent"
          }
        ]'
    spec:
      containers:
      - name: billing-service-v1
        image: {{conf['billing-service-v1']['images'][0]}}
        ports:
        - containerPort: 8080
        readinessProbe:
          httpGet:
            path: /billing-service-v1/health
            port: 8080
          initialDelaySeconds: 90
          timeoutSeconds: 3
          periodSeconds: 30
          successThreshold: 1
          failureThreshold: 5
        livenessProbe:
          httpGet:
            path: /billing-service-v1/health
            port: 8080
          initialDelaySeconds: 120
          timeoutSeconds: 3
          periodSeconds: 60
          successThreshold: 1
          failureThreshold: 5
        env:
        - name: SPRING_DATASOURCE_URL
          value: "{{conf['billing-service-v1']['db-url']}}"
        - name: SPRING_DATASOURCE_USERNAME
          valueFrom:
            secretKeyRef:
              name: db
              key: username
        - name: SPRING_DATASOURCE_PASSWORD
          valueFrom:
            secretKeyRef:
              name: db
              key: password
        - name: SPRING_DATASOURCE_TOMCAT_INITIAL_SIZE
          valueFrom:
            configMapKeyRef:
              name: egov-config
              key: spring-datasource-tomcat-initialSize
        - name: SERVER_TOMCAT_MAX_THREADS
          value: "{{conf['egov-config']['server-tomcat-max-threads']}}"    
        - name: SERVER_TOMCAT_MAX_CONNECTIONS
          value: "{{conf['egov-config']['server-tomcat-max-connections']}}" 
        - name: SPRING_DATASOURCE_TOMCAT_MAX_ACTIVE
          value: "{{conf['egov-config']['spring-datasource-tomcat-max-active']}}"                                      
        - name: SERVER_PORT
          value: "8080"
        - name: FLYWAY_ENABLED
          value: "false"
        - name: JAVA_OPTS
          value: "{{conf['billing-service-v1']['heap'] or '-Xmx192m -Xms192m'}}"
        - name: APP_TIMEZONE
          valueFrom:
            configMapKeyRef:
              name: egov-config
              key: timezone
        - name: KAFKA_CONFIG_BOOTSTRAP_SERVER_CONFIG
          valueFrom:
            configMapKeyRef:
              name: egov-config
              key: kafka-brokers
        - name: SPRING_KAFKA_BOOTSTRAP_SERVERS
          valueFrom:
            configMapKeyRef:
              name: egov-config
              key: kafka-brokers
        - name: USER_SERVICE_HOSTNAME
          value: "{{conf['egov-service-host']['egov-user']}}"
        - name: EGOV_MDMS_HOST
          value: "{{conf['egov-service-host']['egov-mdms-service']}}"                    
        - name: SPRING_KAFKA_CONSUMER_VALUE_DESERIALIZER
          value: org.egov.demand.consumer.HashMapDeserializer
        - name: SPRING_KAFKA_CONSUMER_KEY_DESERIALIZER
          value: org.apache.kafka.common.serialization.StringDeserializer
        - name: SPRING_KAFKA_CONSUMER_GROUP_ID
          value: bs-v1-persist
        - name: SPRING_KAFKA_PRODUCER_KEY_SERIALIZER
          value: org.apache.kafka.common.serialization.StringSerializer
        - name: SPRING_KAFKA_PRODUCER_VALUE_SERIALIZER
          value: org.springframework.kafka.support.serializer.JsonSerializer  
        - name: KAFKA_TOPICS_SAVE_BILL
          value: save-bill-v1-db
        - name: KAFKA_TOPICS_UPDATE_BILL
          value: update-bill-v1-db
        - name: KAFKA_TOPICS_SAVE_DEMAND
          value: save-demand-v1
        - name: KAFKA_TOPICS_UPDATE_DEMAND
          value: update-demand-v1
        - name: KAFKA_TOPICS_SAVE_TAXHEADMASTER
          value: save-taxHeadMaster-v1-db
        - name: KAFKA_TOPICS_UPDATE_TAXHEADMASTER
          value: update-taxHeadMaster-v1-db
        - name: KAFKA_CONSUMER_CONFIG_GROUP_ID
          value: bs-v1-masters-group
        - name: BS_BILL_SEQ_NAME
          value: seq_egbs_bill
        - name: BS_BILLDETAIL_SEQ_NAME
          value: seq_egbs_billdetail
        - name: BS_BILLDETAIL_BILLNUMBER_SEQ_NAME
          value: seq_egbs_billnumber
        - name: BS_BILLACCOUNTDETAIL_SEQ_NAME
          value: seq_egbs_billaccountdetail
        - name: BS_DEMAND_SEQ_NAME
          value: seq_egbs_demand
        - name: BS_DEMANDDETAIL_SEQ_NAME
          value: seq_egbs_demanddetail
        - name: SPRING_JPA_SHOW_SQL
          value: "{{conf['egov-config']['spring-jpa-show-sql']}}"
        - name: SERVER_CONTEXT_PATH
          value: /billing-service-v1
        - name: SPRING_KAFKA_CONSUMER_VALUE_DESERIALIZER
          value: org.egov.demand.consumer.HashMapDeserializer
        - name: KAFKA_TOPICS_RECEIPT_UPDATE_DEMAND
          value: egov.collection.v1.receipt-create
        - name: KAFKA_TOPICS_SAVE_GLCODEMASTER
          value: save-glCodeMaster-v1-db
        - name: KAFKA_TOPICS_UPDATE_GLCODEMASTER
          value: update-glCodeMaster-v1-db
        - name: KAFKA_TOPICS_CREATE_TAXPERIOD_NAME
          value: save-taxperiod-v1-db
        - name: KAFKA_TOPICS_UPDATE_TAXPERIOD_NAME
          value: update-taxperiod-v1-db
        - name: KAFKA_TOPICS_CREATE_BUSINESSSERVICEDETAIL_NAME
          value: save-businessservicedetail-v1-db
        - name: KAFKA_TOPICS_UPDATE_BUSINESSSERVICEDETAIL_NAME
          value: update-businessservicedetail-v1-db
        - name: BS_TAXHEAD_SEQ_NAME
          value: seq_egbs_taxheadmaster
        - name: BS_TAXHEAD_CODE_SEQ_NAME
          value: seq_egbs_taxheadmastercode
        - name: BS_GLCODEHEAD_SEQ_NAME
          value: seq_egbs_glcodemaster
        - name: BS_TAXPERIOD_SEQ_NAME
          value: seq_egbs_taxperiod
        - name: BS_BUSINESSSERVICEDETAIL_SEQ_NAME
          value: seq_egbs_business_srvc_details
        - name: JAEGER_SERVICE_NAME
          value: billing-service-v1
        - name: JAEGER_SAMPLER_TYPE
          value: remote
        - name: JAEGER_AGENT_HOST
          valueFrom:
            fieldRef:
              fieldPath: status.hostIP
        - name: JAEGER_AGENT_PORT
          value: "6831"
        - name: JAEGER_SAMPLER_MANAGER_HOST_PORT
          value: $(JAEGER_AGENT_HOST):5778          
        - name: JAVA_ARGS
          value: "-Dspring.profiles.active=monitoring" 
        - name: SECURITY_BASIC_ENABLED
          value: "false"  
        - name: MANAGEMENT_SECURITY_ENABLED
          value: "false"                              
        # resources:
        #   requests:
        #     memory: "64Mi"
        #   limits:
        #     memory: "{{ conf['billing-service-v1']['memory_limits'] or "256Mi"}}"
