apiVersion: v1
kind: Service
metadata:
  name: egov-user
  namespace: egov
  labels:
    app: egov-user
    group: core
spec:
  ports:
  - port: 8080
    targetPort: 8080
  selector:
    app: egov-user
    group: core
---
apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  name: egov-user
  namespace: egov
spec:
  replicas: {{conf['egov-user']['replicas']}}
  template:
    metadata:
      labels:
        app: egov-user
        group: core
      annotations:
        pod.beta.kubernetes.io/init-containers: '[
        {% if conf["egov-user"]["env_specific_db_migration_image"] %}
          {
            "name": "egov-user-env-specific-db-migration",
            "image": "{{conf["egov-user"]["env_specific_db_migration_image"]}}",
            "command": ["sh", "-c", "cp -R /egov/db/migration/core/egov-user/* /env_specific_db_migration/"],
            "volumeMounts": [
              {
                "mountPath": "/env_specific_db_migration",
                "name": "env-specific-db-migration"
              }
            ],
            "imagePullPolicy": "Always"
          },
        {% endif %}
          {
            "name": "egov-user-db-migration",
            "image": "{{conf["egov-user"]["db_migration_image"]}}",
            "env": [
              {"name": "DB_URL", "valueFrom": {"configMapKeyRef": {"name": "egov-config", "key": "db-url"}}},
              {"name": "SCHEMA_TABLE", "value": "egov_user_schema"},
              {"name": "FLYWAY_USER", "valueFrom": {"secretKeyRef": {"name": "db", "key": "flyway-username"}}},
              {"name": "FLYWAY_PASSWORD", "valueFrom": {"secretKeyRef": {"name": "db", "key": "flyway-password"}}},
              {"name": "FLYWAY_LOCATIONS", "valueFrom": {"configMapKeyRef": {"name": "egov-config", "key": "flyway-locations"}}}
            ],
            "volumeMounts": [
              {
                "mountPath": "/env_specific_db_migration",
                "name": "env-specific-db-migration"
              }
            ],
            "imagePullPolicy": "IfNotPresent"
          }
        ]'
    spec:
      containers:
      - name: egov-user
        image: {{conf['egov-user']['images'][0]}}
        ports:
        - containerPort: 8080
        env:
        - name: SPRING_DATASOURCE_URL
          valueFrom:
            configMapKeyRef:
              name: egov-config
              key: db-url
        - name: FLYWAY_URL
          valueFrom:
            configMapKeyRef:
              name: egov-config
              key: db-url
        - name: SPRING_DATASOURCE_USERNAME
          valueFrom:
            secretKeyRef:
              name: db
              key: username
        - name: SPRING_DATASOURCE_PASSWORD
          valueFrom:
            secretKeyRef:
              name: db
              key: password
        - name: SPRING_DATASOURCE_TOMCAT_INITIAL_SIZE
          valueFrom:
            configMapKeyRef:
              name: egov-config
              key: spring-datasource-tomcat-initialSize
        - name: FLYWAY_ENABLED
          value: "false"
        - name: SERVER_PORT
          value: "8080"
        - name: SPRING_REDIS_HOST
          value: redis.backbone
        - name: SPRING_REDIS_PORT
          value: "6379"
        - name: CORE_OTP_SERVICE_URL
          value: http://egov-otp:8080/
        - name: EGOV_SERVICES_ACCESSCONTROL_HOST
          value: http://egov-accesscontrol:8080/
        - name: JAVA_OPTS
          value: "{{conf['egov-user']['heap'] or '-Xmx64m -Xms64m'}}"
        - name: APP_TIMEZONE
          valueFrom:
            configMapKeyRef:
              name: egov-config
              key: timezone
        - name: SPRING_JPA_SHOW_SQL
          value: "{{conf['egov-config']['spring-jpa-show-sql']}}"
        resources:
          requests:
            memory: "64Mi"
          limits:
            memory: "{{ conf['egov-user']['memory_limits'] or "256Mi"}}"
      volumes:
      - name: env-specific-db-migration
        emptyDir: {}
      imagePullSecrets:
      - name: regsecret
