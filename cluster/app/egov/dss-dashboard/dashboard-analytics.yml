apiVersion: v1
kind: Service
metadata:
  name: dashboard-analytics
  namespace: egov
  labels:
    app: dashboard-analytics
    group: rainmaker
  annotations:
    prometheus.io/path: /dashboard-analytics/prometheus
    prometheus.io/port: "8080"
    prometheus.io/scrape: "true"    
spec:
  ports:
  - port: 8080
    targetPort: 8080
  selector:
    app: dashboard-analytics
    group: rainmaker
---
apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  name: dashboard-analytics
  namespace: egov
spec:
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxUnavailable: 0
      maxSurge: 1
  replicas: {{conf['dashboard-analytics']['replicas']}}
  template:
    metadata:
      labels:
        app: dashboard-analytics
        group: rainmaker
    spec:
      volumes:
      - name: git-secret
        secret:
          secretName: git-creds
          defaultMode: 288 # = mode 0440   
      - name: workdir
        emptyDir: {}     
      initContainers: 
      - name: "git-sync"
        image: "{{conf["git-sync"]["image"]}}"
        env: 
        - name: "GIT_SYNC_REPO"
          value: "{{conf['dashboard-analytics']['repo']}}"
        - name: "GIT_SYNC_BRANCH"
          value: "{{conf['dashboard-analytics']['branch']}}"        
        - name: "GIT_SYNC_DEPTH"
          value: "1"            
        - name: "GIT_SYNC_ONE_TIME"
          value: "true"          
        - name: "GIT_SYNC_SSH"
          value: "true"      
        - name: "GIT_SYNC_ROOT"
          value: "/work-dir"      
        securityContext:
          runAsUser: 65533 # git-sync user
        volumeMounts:
        - name: git-secret
          mountPath: /etc/git-secret              
        - name: workdir
          mountPath: "/work-dir"         
        imagePullPolicy: "IfNotPresent"
      securityContext:
        fsGroup: 65533 # to make SSH key readable     
      containers:
      - name: dashboard-analytics
        image: {{conf['dashboard-analytics']['images'][0]}}
        ports:
        - containerPort: 8080
        env:
        - name: SPRING.DATASOURCE.URL
          valueFrom:
            configMapKeyRef:
              name: egov-config
              key: db-url
        - name: SPRING_DATASOURCE_USERNAME
          valueFrom:
            secretKeyRef:
              name: db
              key: username
        - name: SPRING_DATASOURCE_PASSWORD
          valueFrom:
            secretKeyRef:
              name: db
              key: password
        - name: SERVER_CONTEXT
          value: "dashboard-analytics" 
        - name: SERVER_PORT
          value: "8080" 
        - name: SERVICES_ESINDEXER_HOST
          value: "{{conf['egov-config']['es-indexer-host']}}" 
        - name: SERVICES_ESINDEXER_HOST_NAME
          value: "{{conf['logging-config']['es-host']}}"
        - name: SERVICES_ESINDEXER_HOST_PORT
          value: "{{conf['logging-config']['es-port']}}"
        - name: ES_INDEX_NAME
          value: "transaction"
        - name: ES_DOCUMENT_TYPE
          value: "transaction"
        - name: TOP_PERFORMANCE_RECORD_COUNT
          value: "5"
        - name: EGOV_SERVICES_ESINDEXER_HOST_SEARCH
          value: "/_search"
        - name: CONFIG_SCHEMA_PATHS
          value: "{{conf['dashboard-analytics']['config-schema-paths']}}"           
        volumeMounts:              
        - name: workdir
          mountPath: "/work-dir"             
        resources:
          requests:
            memory: "{{ conf['dashboard-analytics']['memory_limits'] or "1Gi"}}"
          limits:
            memory: "{{ conf['dashboard-analytics']['memory_limits'] or "1Gi"}}"
