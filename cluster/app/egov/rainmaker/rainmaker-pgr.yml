apiVersion: v1
kind: Service
metadata:
  name: rainmaker-pgr
  namespace: egov
  labels:
    app: rainmaker-pgr
    group: rainmaker
spec:
  ports:
  - port: 8080
    targetPort: 8080
  selector:
    app: rainmaker-pgr
    group: rainmaker
---
apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  name: rainmaker-pgr
  namespace: egov
spec:
  replicas: {{conf['rainmaker-pgr']['replicas']}}
  template:
    metadata:
      labels:
        app: rainmaker-pgr
        group: rainmaker
      annotations:
        pod.beta.kubernetes.io/init-containers: '[
          {
            "name": "rainmaker-pgr-db-migration",
            "image": "{{conf["rainmaker-pgr"]["db_migration_image"]}}",
            "env": [
              {"name": "DB_URL", "valueFrom": {"configMapKeyRef": {"name": "egov-config", "key": "db-url"}}},
              {"name": "SCHEMA_TABLE", "value": "rainmaker_pgr_schema"},
              {"name": "FLYWAY_USER", "valueFrom": {"secretKeyRef": {"name": "db", "key": "flyway-username"}}},
              {"name": "FLYWAY_PASSWORD", "valueFrom": {"secretKeyRef": {"name": "db", "key": "flyway-password"}}},
              {"name": "FLYWAY_LOCATIONS", "valueFrom": {"configMapKeyRef": {"name": "egov-config", "key": "flyway-locations"}}}
            ],
            "imagePullPolicy": "IfNotPresent"
          }
        ]'
    spec:
      containers:
      - name: rainmaker-pgr
        image: {{conf['rainmaker-pgr']['images'][0]}}
        ports:
        - containerPort: 8080
        env:
        - name: SPRING_DATASOURCE_URL
          valueFrom:
            configMapKeyRef:
              name: egov-config
              key: db-url
        - name: SPRING_DATASOURCE_USERNAME
          valueFrom:
            secretKeyRef:
              name: db
              key: username
        - name: SPRING_DATASOURCE_PASSWORD
          valueFrom:
            secretKeyRef:
              name: db
              key: password
        - name: SPRING_KAFKA_BOOTSTRAP_SERVERS
          valueFrom:
            configMapKeyRef:
              name: egov-config
              key: kafka-brokers
        - name: FLYWAY_ENABLED
          value: "false"
        - name: SPRING_KAFKA_CONSUMER_KEY_DESERIALIZER
          value: org.apache.kafka.common.serialization.StringDeserializer
        - name: SPRING_KAFKA_CONSUMER_GROUP_ID
          value: rainmaker-service
        - name: SPRING_KAFKA_PRODUCER_KEY_SERIALIZER
          value: org.apache.kafka.common.serialization.StringSerializer
{% if conf['egov-config']['serializers-timezone-in-ist'] %}
        - name: SPRING_KAFKA_CONSUMER_VALUE_DESERIALIZER
          value: org.egov.tracer.kafka.deserializer.ISTTimeZoneHashMapDeserializer
        - name: SPRING_KAFKA_PRODUCER_VALUE_SERIALIZER
          value: org.egov.tracer.kafka.serializer.ISTTimeZoneJsonSerializer
{% endif %}
        - name: EGOV_IDGEN_HOST
          value: "{{conf['egov-service-host']['egov-idgen']}}"
        - name: EGOV_MDMS_HOST
          value: "{{conf['egov-service-host']['egov-mdms-service']}}"
        - name: EGOV_LOCALIZATION_HOST
          value: "{{conf['egov-service-host']['egov-localization']}}"
        - name: EGOV_INFRA_SEARCHER_HOST
          value: "{{conf['egov-service-host']['egov-searcher']}}"
        - name: EGOV_HR_EMPLOYEE_HOST
          value: "{{conf['egov-service-host']['hr-employee']}}"
        - name: EGOV_HR_EMPLOYEE_V2_HOST
          value: "{{conf['egov-service-host']['hr-employee-v2']}}"
        - name: EGOV_COMMON_MASTERS_HOST
          value: "{{conf['egov-service-host']['egov-common-masters']}}"
        - name: EGOV_FILESTORE_HOST
          value: "{{conf['egov-service-host']['egov-filestore']}}"
        - name: EGOV_UI_APP_HOST
          value: "{{conf['egov-config']['egov-services-fqdn-name']}}"
        - name: EGOV_USER_HOST
          value: "{{conf['egov-service-host']['egov-user']}}"
        - name: NOTIFICATION_SMS_ENABLED
          value: "{{conf['rainmaker-pgr']['notification-sms-enabled']}}"
        - name: NOTIFICATION_EMAIL_ENABLED
          value: "{{conf['rainmaker-pgr']['notification-email-enabled']}}"
        - name: NEW_COMPLAINT_ENABLED
          value: "{{conf['rainmaker-pgr']['new-complaint-enabled']}}"
        - name: REASSIGN_COMPLAINT_ENABLED
          value: "{{conf['rainmaker-pgr']['reassign-complaint-enabled']}}"
        - name: REOPEN_COMPLAINT_ENABLED
          value: "{{conf['rainmaker-pgr']['reopen-complaint-enabled']}}"
        - name: COMMENT_BY_EMPLOYEE_NOTIF_ENABLED
          value: "{{conf['rainmaker-pgr']['comment-by-employee-notif-enabled']}}"
        - name: EGOV_PGR_APP_PLAYSTORE_LINK
          value: "https://goo.gl/ArDyQ1"
        - name: NOTIFICATION_ALLOWED_ON_STATUS
          value: "{{conf['rainmaker-pgr']['notification-allowed-status']}}"
{% if conf['egov-config']['tracer-errors-provideexceptionindetails'] %}
        - name: TRACER_ERRORS_PROVIDEEXCEPTIONINDETAILS
          value: "{{conf['egov-config']['tracer-errors-provideexceptionindetails']}}"
{% endif %}
        - name: APP_TIMEZONE
          valueFrom:
            configMapKeyRef:
              name: egov-config
              key: timezone
        - name: JAVA_OPTS
          value: "{{conf['rainmaker-pgr']['heap'] or '-Xmx64m -Xms64m'}}"
        - name: SPRING_JPA_SHOW_SQL
          value: "{{conf['egov-config']['spring-jpa-show-sql']}}"
        - name: SERVER_PORT
          value: "8080"
        resources:
          requests:
            memory: "64Mi"
          limits:
            memory: "{{ conf['rainmaker-pgr']['memory_limits'] or "256Mi"}}"
#        securityContext:
#          capabilities:
#            add:
#              - NET_ADMIN

#        livenessProbe:
#          httpGet:
#            path: /rainmaker-pgr/health
#            port: 8080
#          initialDelaySeconds: 60
#          periodSeconds: 10