---
# Source: facility/templates/service.yaml
# service.yaml---
apiVersion: v1
kind: Service
metadata:
  name: facility
  namespace: health
  annotations: 
    zuul/route-path: facility 
  labels:
    app: facility      
    group: health   
spec:
  selector:
    app: facility      
    group: health    
  ports:
  - name: http
    port: 8080
    targetPort: 8080
---
# Source: facility/templates/deployment.yaml
# deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: facility
  namespace: health
  labels:
    app: facility      
    group: health   
spec:
  selector:
    matchLabels:
      app: facility      
      group: health
  strategy:
    rollingUpdate:
      maxUnavailable: 0     
  replicas: 1
  template:
    metadata:  
      annotations:      
        deployment-timestamp: "20240304120619"        
      labels:
        app: facility      
        group: health            
    spec:
      affinity:
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - weight: 100
            podAffinityTerm:
              topologyKey: "failure-domain.beta.kubernetes.io/zone"
              labelSelector:
                matchLabels:
                  app: facility      
                  group: health     
      initContainers:
      
      - name: "db-migration"
        image: egovio/facility-db:dev-e0ad908683-23
        imagePullPolicy: IfNotPresent               
        env:
            - name: "DB_URL"
              valueFrom:
                configMapKeyRef:
                  name: egov-config
                  key: health-db-url
            - name: "SCHEMA_TABLE"
              value: "facility_schema"
            - name: "FLYWAY_USER"
              valueFrom:
                secretKeyRef:
                    name: db
                    key: flyway-username
            - name: "FLYWAY_PASSWORD"
              valueFrom:
                secretKeyRef: 
                    name: db
                    key: flyway-password
            - name: "FLYWAY_LOCATIONS"
              valueFrom: 
                configMapKeyRef: 
                    name: egov-config
                    key: flyway-locations
            
      imagePullSecrets:
        - name: docker-registry-secret            
      containers:      
        - name: facility
          image: egovio/facility:dev-e0ad908683-23
          imagePullPolicy: IfNotPresent             
          ports:
            - name: http
              containerPort: 8080
              protocol: TCP              
          readinessProbe:
            httpGet:
                path: "/facility/health"
                port: 8080
            initialDelaySeconds: 30
            timeoutSeconds: 3
            periodSeconds: 30
            successThreshold: 1
            failureThreshold: 5        
             
          livenessProbe:
            httpGet:
                path: "/facility/health"
                port: 8080
            initialDelaySeconds: 30
            timeoutSeconds: 3
            periodSeconds: 60
            successThreshold: 1
            failureThreshold: 5
            
          lifecycle:
            preStop:
              exec:
                command:
                - sh
                - -c
                - sleep 10
          env:
            - name: SPRING_KAFKA_CONSUMER_GROUP_ID
              value: health-project
            - name: SPRING_KAFKA_PRODUCER_KEY_SERIALIZER
              value: org.apache.kafka.common.serialization.StringSerializer
            - name: EGOV_IDGEN_HOST
              valueFrom:
                configMapKeyRef:
                  name: egov-service-host
                  key: egov-idgen
            - name: EGOV_IDGEN_PATH
              value: "egov-idgen/id/_generate"
            - name: EGOV_IDGEN_INTEGRATION_ENABLED
              value: "true"
            - name: FACILITY.IDGEN.ID.FORMAT
              value: "facility.id"
            - name: SPRING_REDIS_HOST
              value: redis.backbone
            - name: SPRING_REDIS_PORT
              value: "6379"
            - name: SPRING_CACHE_TYPE
              value: "redis"
            - name: SPRING_CACHE_REDIS_TIME-TO-LIVE
              value: "60"
            - name: SPRING_CACHE_AUTOEXPIRY
              value: "true"
            - name: JAVA_OPTS
              value: "-Xmx192m -Xms192m"
            - name: JAVA_ARGS
              value: ""
            - name: JAVA_ENABLE_DEBUG
              value: 
            - name: SERVER_PORT
              value: "8080"
            - name: SECURITY_BASIC_ENABLED
              value: "false"
            - name: MANAGEMENT_SECURITY_ENABLED
              value: "false"
            - name: TRACER_OPENTRACING_ENABLED
              value: "true"
            
            - name: FACILITY.KAFKA.CREATE.TOPIC
              value: "save-facility-health-topic"
            - name: FACILITY.KAFKA.UPDATE.TOPIC
              value: "update-facility-health-topic"
            - name: FACILITY.KAFKA.DELETE.TOPIC
              value: "delete-facility-health-topic"
            - name: FACILITY.CONSUMER.BULK.DELETE.TOPIC
              value: "delete-facility-bulk-health-topic"
            - name: FACILITY.CONSUMER.BULK.CREATE.TOPIC
              value: "create-facility-bulk-health-topic"
            - name: FACILITY.CONSUMER.BULK.UPDATE.TOPIC
              value: "update-facility-bulk-health-topic"
            - name: SPRING_DATASOURCE_URL
              valueFrom:
                configMapKeyRef:
                  name: egov-config
                  key: health-db-url
            - name: FLYWAY_ENABLED
              value: "false"      
            - name: SPRING_FLYWAY_ENABLED
              value: "false"      
            - name: MANAGEMENT_ENDPOINTS_WEB_BASE_PATH
              value: "/"
            - name: APP_TIMEZONE
              valueFrom:
                configMapKeyRef:
                  name: egov-config
                  key: timezone              
            - name: FLYWAY_URL
              valueFrom:
                configMapKeyRef:
                  name: egov-config
                  key: health-db-url
            - name: SPRING_DATASOURCE_USERNAME
              valueFrom:
                secretKeyRef:
                  name: db
                  key: username
            - name: SPRING_DATASOURCE_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: db
                  key: password
            - name: SPRING_DATASOURCE_TOMCAT_INITIAL_SIZE
              valueFrom:
                configMapKeyRef:
                  name: egov-config
                  key: spring-datasource-tomcat-initialSize
            - name: SERVER_TOMCAT_MAX_THREADS        
              valueFrom:
                configMapKeyRef:
                  name: egov-config
                  key: server-tomcat-max-threads            
            - name: SERVER_TOMCAT_MAX_CONNECTIONS        
              valueFrom:
                configMapKeyRef:
                  name: egov-config
                  key: server-tomcat-max-connections                
            - name: SPRING_DATASOURCE_TOMCAT_MAX_ACTIVE 
              valueFrom:
                configMapKeyRef:
                  name: egov-config
                  key: spring-datasource-tomcat-max-active       
            - name: SPRING_DATASOURCE_HIKARI_MAXIMUM-POOL-SIZE
              valueFrom:
                configMapKeyRef:
                  name: egov-config
                  key: spring-datasource-tomcat-max-active           
            - name: KAFKA_CONFIG_BOOTSTRAP_SERVER_CONFIG
              valueFrom:
                configMapKeyRef:
                  name: egov-config
                  key: kafka-brokers
            - name: SPRING_KAFKA_BOOTSTRAP_SERVERS
              valueFrom:
                configMapKeyRef:
                  name: egov-config
                  key: kafka-brokers
            - name: SPRING_JPA_SHOW_SQL
              valueFrom:
                configMapKeyRef:
                  name: egov-config
                  key: spring-jpa-show-sql     
            - name: IS_ENVIRONMENT_CENTRAL_INSTANCE
              value: "false"
              
            
            - name: JAEGER_SERVICE_NAME
              value: facility
            - name: JAEGER_SAMPLER_TYPE
              value: remote
            - name: JAEGER_AGENT_HOST
              valueFrom:
                fieldRef:
                  fieldPath: status.hostIP
            - name: JAEGER_AGENT_PORT
              value: "6831"
            - name: JAEGER_SAMPLER_MANAGER_HOST_PORT
              value: "$(JAEGER_AGENT_HOST):5778"
            - name: TRACER_OPENTRACING_ENABLED
              value: "true"         
                                                 
          resources:
            requests:
              memory: "256Mi"
            limits:
              memory: "256Mi"
---
# Source: facility/templates/ingress.yaml
# ingress.yaml---
apiVersion: networking.k8s.io/v1 
kind: Ingress
metadata:
  name: facility
  namespace: egov     
  annotations:
    kubernetes.io/ingress.class: nginx
    nginx.ingress.kubernetes.io/use-regex: "true"
    nginx.ingress.kubernetes.io/lua-resty-waf: active
    nginx.ingress.kubernetes.io/lua-resty-waf-allow-unknown-content-types: "true"
    nginx.ingress.kubernetes.io/lua-resty-waf-debug: "true"
    nginx.ingress.kubernetes.io/lua-resty-waf-process-multipart-body: "false"
    nginx.ingress.kubernetes.io/lua-resty-waf-score-threshold: "10" 
  labels:
    app: facility      
    group: health                            
spec:
  rules:  
  - host: unified-dev.digit.org  
    http:
      paths:
      - backend:          
          service:
            name: zuul
            port:
              number: 8080
            
        path: /facility
        pathType: Prefix        
  tls:      
  - hosts:
    - unified-dev.digit.org
    secretName: unified-dev.digit.org-tls-certs

options.ConfigDir: ../../deploy-as-code/helm
