{{- $envOverrides := index .Values (tpl .Values.name .) -}} 
{{- $baseValues := .Values | deepCopy -}}
{{- $values := dict "Values" (mustMergeOverwrite $baseValues $envOverrides) -}}
{{- with mustMergeOverwrite . $values -}}
{{- range $idx, $v := until (int .Values.replicas) }}
apiVersion: v1
kind: PersistentVolume
metadata:
name: "{{ $.Chart.Name }}-data-{{ $.Values.name }}-{{ $idx }}"
labels:
    app: {{ $.Values.name }}
{{- if $.Values.persistence.aws }}   
    failure-domain.beta.kubernetes.io/zone: {{ index $.Values "persistence" "aws" $idx "zone" }}
{{- end }}     
spec:
capacity:
    storage: {{ $.Values.persistence.dataDirSize | quote }}  
accessModes:
    - ReadWriteOnce
persistentVolumeReclaimPolicy: Retain
claimRef:
    namespace: {{ $.Values.namespace }}  
    name: "{{ $.Chart.Name }}-data-{{ $.Values.name }}-{{ $idx }}"
{{- if $.Values.persistence.aws }}
awsElasticBlockStore:
    volumeID: {{ index $.Values "persistence" "aws" $idx "volumeId" }}
    fsType: ext4
{{- end }} 
{{- if $.Values.persistence.azure }}
azureDisk:
    diskName: {{ index $.Values "persistence" "azure" $idx "zodiskNamee" }}
    diskURI: {{ index $.Values "persistence" "azure" $idx "diskUri" }}
    kind: Managed
    fsType: ext4 
{{- end }}     
{{- if $.Values.persistence.openstack }}
cinder: 
    fsType: "ext4" 
    volumeID: {{ index $.Values "persistence" "openstack" $idx }}
{{- end }}         
---
{{- end }}
{{- end }}